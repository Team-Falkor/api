generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id                String    @id @default(uuid())
  email             String    @unique
  username          String    @unique
  password          String
  isOnline          Boolean   @default(false)
  role              Role      @default(USER)
  refreshToken      String?
  emailVerified     Boolean   @default(false)
  verificationToken String?
  resetToken        String?
  resetTokenExpiry  DateTime?
  lastLogin         DateTime?
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  accounts          Account[]
  sessions          Session[]
}

model Session {
  id        String   @id @default(uuid())
  userId    String
  token     String   @unique
  ipAddress String?
  userAgent String?
  createdAt DateTime @default(now())
  expiresAt DateTime
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Account {
  id                String  @id @default(uuid())
  userId            String
  provider          String
  providerAccountId String
  refreshToken      String?
  accessToken       String?
  expiresAt         Int?
  tokenType         String?
  scope             String?
  idToken           String?
  sessionState      String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Provider {
  id        Int      @id @default(autoincrement())
  setupUrl  String   @unique
  setupJSON Json
  name      String   @unique
  official  Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  failureCount Int     @default(0)
  approved     Boolean @default(false)
}

model HealthCheckState {
  id                      Int      @id @default(1)
  lastCheckCompletionTime DateTime
  wasLastCheckSuccessful  Boolean
}
